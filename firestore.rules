rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && request.auth.token.role == 'admin';
    }

    function isUser() {
      return isAuthenticated() && request.auth.token.role == 'user';
    }

    function isValidUserData() {
      return request.resource.data.keys().hasAll(['email', 'createdAt']) &&
             request.resource.data.email is string &&
             (request.resource.data.createdAt is string || request.resource.data.createdAt is timestamp);
    }

    function isValidAddressData() {
      return request.resource.data.keys().hasAll(['firstName', 'lastName', 'addressLine1', 'city', 'postalCode', 'country']) &&
             request.resource.data.firstName is string &&
             request.resource.data.lastName is string;
    }

    // Users collection - users read/write own data, admins read all
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId) && isValidUserData();
      allow update: if isOwner(userId) || isAdmin();

      // User subcollections
      match /addresses/{addressId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }

      match /service_profiles/{profileId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }

      match /service_requests/{requestId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }

      match /cart/active {
        allow read, write: if isOwner(userId);
      }

      match /orders/{orderId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }

      // Legacy subcollections (keeping for backward compatibility)
      match /user_addresses/{addressId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }

      match /user_payment_cards/{cardId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }

      match /user_orders/{orderId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    // Global collections (legacy - keeping for backward compatibility)
    match /addresses/{addressId} {
      allow read, write: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if isAuthenticated() &&
        request.resource.data.userId == request.auth.uid &&
        isValidAddressData();
    }

    match /payment_cards/{cardId} {
      allow read, write: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if isAuthenticated() &&
        request.resource.data.userId == request.auth.uid;
    }

    match /orders/{orderId} {
      allow read, write: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if isAuthenticated() &&
        request.resource.data.userId == request.auth.uid;
    }

    match /payments/{paymentId} {
      allow read, write: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if isAuthenticated() &&
        request.resource.data.userId == request.auth.uid;
    }

    match /invoices/{invoiceId} {
      allow read, write: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if isAuthenticated() &&
        request.resource.data.userId == request.auth.uid;
    }

    // Product cache - read-only for all authenticated users, admin can write
    match /products_cache/{productId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Service catalog - read for all, admin can write
    match /service_catalog/{itemId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // App configuration - read for all, admin can write
    match /app_config/{configId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Legacy collections
    match /products/{productId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Connection test document (for ConfigService)
    match /_connection_test/test {
      allow read: if isAuthenticated();
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}